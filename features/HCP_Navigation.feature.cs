// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DemoPattern.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("HCP_Navigation")]
    public partial class HCP_NavigationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "HCP_Navigation.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "HCP_Navigation", " HCP must be able to navigate through all the link the page available on the port" +
                    "al\r\n\tEmail notifications to medical team \r\n\t- Patient list \r\n\t- Statistics\r\n\t- N" +
                    "otifications\r\n\t- Settings\r\n\t- Patient details\t", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("HCP_statistic_View")]
        [NUnit.Framework.CategoryAttribute("BSC")]
        public virtual void HCP_Statistic_View()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HCP_statistic_View", null, new string[] {
                        "BSC"});
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "UserPassword"});
            table1.AddRow(new string[] {
                        "wonder.hcp1@yopmail.com",
                        "vol+2019"});
#line 13
 testRunner.Given("I login as HCP", ((string)(null)), table1, "Given ");
#line 16
 testRunner.And("I navigate to HCPStatisticsPage page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.Then("I am able to view the statistics page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("HCP_notification_View")]
        [NUnit.Framework.CategoryAttribute("BSC")]
        public virtual void HCP_Notification_View()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HCP_notification_View", null, new string[] {
                        "BSC"});
#line 20
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "UserPassword"});
            table2.AddRow(new string[] {
                        "wonder.hcp1@yopmail.com",
                        "vol+2019"});
#line 21
 testRunner.Given("I login as HCP", ((string)(null)), table2, "Given ");
#line 24
 testRunner.And("I navigate to NotificationsPage page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.Then("I am able to view the notification page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("HCP_Settings_View")]
        [NUnit.Framework.CategoryAttribute("BSC")]
        public virtual void HCP_Settings_View()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HCP_Settings_View", null, new string[] {
                        "BSC"});
#line 28
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "UserPassword"});
            table3.AddRow(new string[] {
                        "wonder.hcp1@yopmail.com",
                        "vol+2019"});
#line 29
 testRunner.Given("I login as HCP", ((string)(null)), table3, "Given ");
#line 32
 testRunner.And("I navigate to SettingsPage page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.Then("I am able to view Settings page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("HCP Edit His Settings - Profile")]
        [NUnit.Framework.CategoryAttribute("BSC")]
        public virtual void HCPEditHisSettings_Profile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HCP Edit His Settings - Profile", null, new string[] {
                        "BSC"});
#line 36
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "UserPassword"});
            table4.AddRow(new string[] {
                        "wonder.hcp1@yopmail.com",
                        "vol+2019"});
#line 37
 testRunner.Given("I login as HCP", ((string)(null)), table4, "Given ");
#line 40
 testRunner.And("I navigate to SettingsPage page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "FirstName",
                        "lastName",
                        "Email",
                        "ConfirmationEmail"});
            table5.AddRow(new string[] {
                        "hcpFirstNameEdited",
                        "hcpLastNameEdited",
                        "wonder.hcp1@yopmail.com",
                        "wonder.hcp1@yopmail.com"});
#line 41
 testRunner.Then("I am able to edit hcp EditProfile_Page section informations", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("HCP Edit His Settings - Preferences")]
        public virtual void HCPEditHisSettings_Preferences()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("HCP Edit His Settings - Preferences", null, ((string[])(null)));
#line 46
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "UserPassword"});
            table6.AddRow(new string[] {
                        "wonder.hcp1@yopmail.com",
                        "vol+2019"});
#line 47
 testRunner.Given("I login as HCP", ((string)(null)), table6, "Given ");
#line 50
 testRunner.And("I navigate to SettingPage page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Language",
                        "HeighUnit",
                        "WeightUnit"});
            table7.AddRow(new string[] {
                        "English (USA)",
                        "Feet and inches",
                        "Kilograms"});
#line 51
 testRunner.Then("I am able to edit hcp Preferences_Page section informations", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
